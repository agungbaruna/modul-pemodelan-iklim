[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Module Praktikum Pemodelan Iklim",
    "section": "",
    "text": "Pendahuluan\nTentang pemodelan iklim"
  },
  {
    "objectID": "praktikum-1.html#pendahuluan",
    "href": "praktikum-1.html#pendahuluan",
    "title": "1  Dynamical Downscaling: Model Weather Research Forecasting (WRF)",
    "section": "1.1 Pendahuluan",
    "text": "1.1 Pendahuluan\nGlobal Climate Model (GCM) adalah alat utama dan paling komprehensif yang digunakan dalam mensimulasikan kondisi iklim pada masa lalu maupun masa depan. GCM memiliki kemampuan dalam melakukan simulasi variabilitas iklim, sifat-sifat fisis, serta kimia di bumi dengan perhitungan secara matematis yang menggambarkan proses, interaksi, dan timbal balik pada atmosfer, lautan, dan biotik. Kelemahan dalam GCM adalah ketidakmampuan menangkap kejadian-kejadian iklim pada skala regional maupun lokal karena memiliki resolusi spasial yang terlalu kasar, yaitu sekitar >100 km. Metode downscaling di dalam ilmu iklim umum digunakan pada kajian hidrologi (Piani, Weedon, et al. 2010), pertanian (Glotter et al. 2014), dan sistem perkotaan (Smid and Costa 2018). Sebagai contoh pada kajian hidrologi, teknik downscaling digunakan untuk pemodelan debit sungai dan banjir (Piani, Haerter, et al. 2010). Metode downscaling adalah cara mendapatkan informasi lebih spesifik dengan resolusi tinggi. Kata downscaling biasanya merujuk pada peningkatan resolusi spasial maupun temporal. Terdapat dua cara dalam melakukan metode ini, yaitu statistik dan dinamik. Di dalam ilmu iklim, metode ini umum digunakan pada GCM. Wilby dan Wigley (Wilby and Wigley 1997) mengelompokkan teknik downscaling menjadi 4 kategori, yaitu\n\nRegresi\nMetode regresi merupakan metode downscaling paling awal yang telah digunakan pada kajian perubahan iklim. Hal ini dapat dibuktikan dari penelitian oleh Kim pada tahun 1984 (Kim et al. 1984). Pendekatan ini secara umum membangun hubungan linier atau non-linier antara parameter titik lokasi dengan prediktor variabel dari resolusi kasar. Contoh dari metode ini adalah regresi linier sederhana, regresi linier berganda, Artificial Neural Network (ANN), regresi komponen utama (Principle Component Regression/PCR), dan lain sebagainya. Sudah banyak penelitian yang menerapkan metode ini untuk kajian perubahan iklim (Huth and Kyselỳ 2000; Goly et al. 2014; Sachindra et al. 2014; Pahlavan et al. 2018).\nPola cuaca\nMetode ini dibangun dari hubungan statistik dari variabel cuaca di stasiun observasi atau rata-rata area dengan klasifikasi cuaca tertentu yang dapat diturunkan secara obyektif maupun subyektif. Metode ini secara obyektif dapat meliputi komponen utama, Canonical Correlation Analyses (CCA), aturan Fuzzy, dan Neural Networks. Contoh prosedur pengelompokkan pola cuaca, yaitu European Grosswetterlagen dan British Isles Lamb Weather Types.\nStokastik\nModel WGEN (Richardson 1981) merupakan contoh dari pendekatan ini. Model WGEN dapat membangkitkan data curah hujan harian yang diperoleh dari peluang kejadian hujan (hujan dan tidak hujan) dengan menggunakan rantai Markov order satu. Model ini telah digunakan dalam kajian perubahan iklim dan analisis dampak. Model stokastik yang telah diperoleh dari data observasi deret waktu dapat divalidasi dengan GCM dan perlu dikalibrasi terlebih dahulu.\nLimited-area climate models (LAM)\nMetode terakhir untuk melakukan downscaling terhadap GCM adalah dengan menyematkan model iklim dengan area terbatas. Sebenarnya, LAM pada saat ini dapat diistilahkan sebagai Regional Climate Model (RCM). RCM memiliki resolusi spasial kurang dari 100 km. RCM memerlukan sumber daya komputer yang hampir sama dengan menjalankan GCM. RCM memiliki kemampuan dalam mensimulasikan proses-proses atmosfer pada skala menengah, seperti curah hujan orografis dan konveksi awan atau skala tinggi, seperti turbulensi. Contoh dari RCM adalah Weather Research Forecasting (WRF) (Skamarock et al. 2019).\n\nTeknik dynamical downscaling dapat menjelaskan proses-proses fisika (hukum termodinamika, hukum kekekalan energi, hukum gerak) untuk setiap skala piksel. Teknik ini membutuhkan kondisi batas menggunakan data GCM dan perlu menentukan pemilihan lokasi. Teknik ini merujuk pada penggunaan RCM untuk meningkatkan skala spasial dan temporal. Model iklim regional meliputi komponen dinamik, fisik, maupun kimia. Komponen dinamik atmosfer memperhitungkan komponen fisika atmosfer yang mencakup proses-proses fisik, seperti radiasi gelombang panjang dan pendek, presipitasi, dan proses pertukaran energi di permukaan bumi atau laut. Proses pada skala sub-piksel dimodelkan oleh berbagai skema parameterisasi yang tentunya dapat berasal dari perhitungan matematika (integral atau diferensial) serta statistik.\nWRF merupakan salah satu teknik dynamical downscaling. Penggunaan model WRF semakin berkembang saat ini dengan tujuan riset dan operasional. WRF memiliki spesifikasi dalam berbagai aplikasi prediksi di dalam sistem bumi, seperti kimia atmosfer, hidrologi, kebakaran hutan, siklon, dan iklim regional. Sebanyak lebih dari 36.000 pengguna WRF tersebar di 162 negara, termasuk Indonesia yang telah menggunakan WRF untuk kebutuhan operasional (Powers et al. 2017). Ada dua jenis model WRF berdasarkan penyelesaian persamaan aliran fluida atmosfer, yaitu Advanced Research WRF (ARW) dan Nonhydrostatic Mesoscale Model (NMM). WRF-ARW dikembangkan oleh National Centre of Atmosphere Research (NCAR), sedangkan WRF-NMM dikembangkan oleh National Centre of Environmental Prediction (NCEP) (Skamarock et al. 2019). Secara umum, WRF mampu melakukan simulasi beberapa komponen Numerical Weather Prediction (NWP) Gambar 1.1. Berdasarkan aplikasi tertentu, WRF memiliki beberapa turunan model, seperti WRF-Chem (kimia atmosfer), WRF-Hydro (hidrologi), dan WRF-Fire (kebakaran hutan dan lahan). Di dalam praktikum ini, Anda hanya perlu memahami cara instalasi dan simulasi WRF-ARW.\n\n\n\nGambar 1.1: Beberapa parameter dalam Numerical Weather Prediction (Sonkaew et al.)\n\n\nWRF diimplementasikan ke dalam bahasa pemrograman komputer. Jika Anda melihat repositori github WRF, Jenis bahasa pemrograman yang paling banyak digunakan adalah Fortran. Untuk perhitungan fisik, kimia, dan matematis diketik dalam bahasa Fortran. Model WRF dapat dijalankan pada personal komputer hingga super komputer. Sebenarnya, Anda dapat menjalankan WRF dengan 1 prosesor saja. Akan tetapi, waktu proses simulasi mungkin akan lama akibat dari resolusi spasial dan temporal yang tinggi, juga cakupan pemilihan wilayah simulasi. Proses perhitungan model dinamik maupun fisik akan lebih cepat jika menggunakan banyak prosesor atau yang bisa disebut dengan komputasi paralel. Kerangka kerja perangkat lunak WRF mendukung komputasi paralel yang efisien pada berbagai platform komputasi. Model atmosfer membawa kumpulan komputasi yang sama di setiap grid vertikal maupun horizontal Gambar 1.2. Komputer melakukan perhitungan fisik atmosfer untuk setiap grid secara paralel. Kita mungkin telah mengenal jenis prosesor yang tersedia saat ini, seperti Intel dan AMD. Jenis prosesor yang mereka buat dapat mempengaruhi kecepatan proses perhitungan. Untuk perhitungan paralel, Anda dapat menggunakan tipe prosesor desktop, mobile (prosesor di laptop), maupun server, tetapi juga perlu memperhatikan banyaknya core maupun frekuensi yang digunakan.\n\n\n\nGambar 1.2: Ilustrasi Model Iklim\n\n\nTerkait dengan bahasa pemrograman yang digunakan di dalam WRF, yaitu bahasa Fortran dan C, kode skrip terlebih dahulu harus dikompilasi dengan program Compiler. Compiler ini bertujuan mengubah bahasa dari kode yang diketik menjadi bahasa mesin. Ada berbagai macam program Compiler yang tersedia secara gratis, salah satunya adalah GNU Compiler Collection (gcc). Selain GNU, perusahaan seperti Intel (icc, ifort, …), AMD (aocc), maupun NVIDIA (pgi) juga memiliki program Compiler yang dapat digunakan secara gratis serta mendukung komputasi paralel. Di dalam modul praktikum ini, Anda dapat memilih salah satu dari dua Compiler yang akan dijelaskan, yaitu GCC atau Intel. Perbedaan terhadap jenis Compiler ini dapat mempengaruhi waktu simulasi pada satu jenis prosesor yang sama Gambar 1.3.\n\n\n\nGambar 1.3: Perbedaan waktu simulasi WRF pada tipe Compiler, Distro, dan Prosesor yang digunakan"
  },
  {
    "objectID": "praktikum-1.html#dasar-dasar-pemrograman-bash",
    "href": "praktikum-1.html#dasar-dasar-pemrograman-bash",
    "title": "1  Dynamical Downscaling: Model Weather Research Forecasting (WRF)",
    "section": "1.2 Dasar-dasar Pemrograman Bash",
    "text": "1.2 Dasar-dasar Pemrograman Bash\nSebagai salah satu tool scripting populer pada UNIX, Bash sangatlah berguna bagi para user Linux atau SysAdmin. Nama Bash merupakan akronim dari Bourne Again Shell. Sebagian besar model iklim, Bash digunakan untuk menjalankan instalasi dan simulasi. Pengguna model-model iklim disarankan mempelajari dasar-dasar pemrograman ini agar memahami berbagai perintah dari cara kerja instalasi dan simulasi model tersebut, biasanya terdapat file bernama README. File ini berisi mengenai cara instalasi, simulasi, informasi file, dan berbagai aplikasi tambahan untuk menjalankan model iklim tersebut.\nBash merupakan shell default dari sistem operasi Linux. Anda bisa menjalankan shell lain, seperti ksh (Korn Shell), zsh, dan csh (C shell). Untuk menjalankan Bash, Anda bisa menekan Ctrl+Alt+T atau carilah aplikasi Terminal. Khusus Windows 10, Anda dapat mencari aplikasi “Ubuntu” atau “wsl.exe”. Tampilan Bash seperti pada Gambar 2. Tulisan menunjukkan nama user dan tanda berarti lokasi folder saat ini.\n\n\n\nGambar 1.4: Bash pada Ubuntu\n\n\nJika Anda mengetik perintah pwd pada Bash, hasilnya adalah seperti di bawah ini atau bisa dilihat pada Gambar 1.5.\n\n\n\nGambar 1.5: Perintah pwd pada terminal Bash\n\n\nPerintah dasar lainnya yang sering digunakan oleh pengguna Linux adalah ls atau ll (Gambar 1.6). Perintah ini berfungsi untuk melihat nama folder dan file yang berada di direktori pada lokasi saat ini. Untuk berpindah lokasi folder, Anda dapat mengetik perintah cd dan pilih folder yang ingin dibuka, contohnya cd Documents/ atau cd Documents (Gambar 1.7). Anda dapat kembali ke folder sebelumnya dengan mengetik perintah cd ..\n\n\n\nGambar 1.6: Perintah ls pada terminal Bash\n\n\n\n\n\nGambar 1.7: Perintah cd pada terminal Bash\n\n\nAnda dapat membuat folder baru dengan perintah mkdir, memindahkan folder atau file dengan mv, menghapus file dengan rm, menghapus folder dengan rmdir, membuat file baru dengan touch, dan menyalin folder atau file dengan cp. Contoh penggunaan beberapa perintah tersebut dapat dilihat sebagai berikut.\n\nMisalkan kita ingin membuat folder “Tes-folder”\nmkdir Tes-folder\nAnda juga dapat membuat lebih dari 1 folder, misalnya “Tes-folder-1” dan “Tes-folder-2”\nmkdir Tes-folder-1 Tes-folder-2\nUntuk memastikan ketiga folder tersebut telah dibuat, ketik perintah ls\nls\nMisalkan kita ingin membuat file “tes-file” di dalam folder “Tes-folder”\ncd Tes-folder\ntouch tes-file\nls\nKemudian, file “tes-file” kita pindahkan ke direktori sebelumnya dan ganti namanya dengan “tes-file-pindah”\nmv tes-file ../tes-file-pindah\nKembali ke folder sebelumnya\ncd ..\nKetik perintah ls untuk memastikan file “tes-file” telah dipindahkan ke direktori sebelumnya dengan berubah nama menjadi “tes-file-pindah”\nls \nFile “tes-file-pindah” dihapus menggunakan perintah rm\nrm tes-file-pindah\nls"
  },
  {
    "objectID": "praktikum-1.html#prosedur-praktikum-instalasi-wrf",
    "href": "praktikum-1.html#prosedur-praktikum-instalasi-wrf",
    "title": "1  Dynamical Downscaling: Model Weather Research Forecasting (WRF)",
    "section": "1.3 Prosedur Praktikum: Instalasi WRF",
    "text": "1.3 Prosedur Praktikum: Instalasi WRF\nKami menyarankan untuk menggunakan sistem operasi Linux dengan Distro Ubuntu. Jika Anda menggunakan Windows 10/11, Anda dapat memasang Windows Subsystem Linux (WSL) dan pasang Distro Ubuntu. Saat kami menguji WRF di Ubuntu, proses instalasi serta simulasi tidak mengalami masalah. Anda dipersilahkan menggunakan distro yang lain, seperti Fedora, CentOS, Almalinux, atau Manjaro, tetapi kami tidak dapat menjamin keberhasilan instalasi dan simulasi pada distro tersebut. Untuk pengguna MacOS, Anda dapat menggunakan Virtual Machine (mis. Virtual Box, VMWare, QEMU) atau Docker.\n\n1.3.1 Menjalankan Windows Subsystem Linux (WSL) di Windows 10/11\nUntuk menjalankan WRF, Anda memerlukan sistem operasi berbasis Linux dengan distribusi yang tersedia saat ini. Pada modul ini, distro Ubuntu yang dipilih untuk simulasi WRF. Bagi Anda pengguna Windows 10/11, WSL dapat digunakan. Selain WSL, Anda juga dapat menggunakan Cygwin. WSL dapat dijalankan pada Windows 10/11 dan Windows Server 2019 dengan versi minimum 1803. Saat ini, WSL versi 2 (WSL-2) telah tersedia yang dapat berjalan pada Windows 10 versi 1903 ke atas. Kami merekomendasikan Anda untuk memasang WSL-2 daripada WSL-1 karena prosesnya lebih cepat. Untuk mengaktifkan WSL, Anda dapat mengikuti beberapa langkah-langkah berikut ini.\n\nUnduh WSL-2 pada halaman ini dan Install.\nPergi ke menu Control Panel \\(\\rightarrow\\) Program and Features\nDi sebelah kiri, klik Turn Windows Features On or Off\nScroll ke paling bawah. Kemudian, aktifkan tanda centang pada Windows Subsystem for Linux dan Virtual Machine Platform\nTunggu proses update sampai selesai, kemudian klik Restart Now (pastikan simpan data-data pekerjaan dan tutup semua aplikasi)\nSetelah proses restart selesai, carilah aplikasi dan unduh Ubuntu pada Microsoft Store\nBuka aplikasi Ubuntu yang telah terunduh dan tunggu konfigurasi selesai\nMasukkan Username dan Password (Catatan: kami sarankan sama dengan user dan pass Windows 10, tapi boleh beda. Hasil ketikan password tidak muncul di terminal)\nKetikkan pada terminal\nsudo apt update\nAnda juga dapat membuka terminal Ubuntu pada terminal Windows Power Shell dengan mengetik wsl atau wsl.exe\n\n\n\n1.3.2 Sebelum Mulai\nAnda perlu mencoba dasar pemrograman Bash sebelum memulai mengunduh data, memasang beberapa package, sampai menjalankan simulasi WRF. Silahkan Anda ikuti langkah-langkah di bawah ini agar memudahkan dalam mencoba praktikum ini.\n\nBuka terminal Bash\n\nUntuk Windows 10/11, buka aplikasi Windows Power Shell. Kemudian, ketikkan perintah seperti di bawah ini. Setelahnya, akan muncul terminal Bash.\nwsl\nUntuk Ubuntu atau disto Linux lainnya, carilah program Terminal atau bisa menggunakan shortcut Ctrl+Alt+T\n\nSaat Anda membuka terminal, pastikan lokasi folder/direktori saat ini adalah /home/<user_name>, di mana user_name adalah nama user pada laptop/komputer Anda masing-masing. Perhatikan kembali Gambar 1.5 bahwa untuk melihat lokasi direktori Anda sekarang bisa mengetik perintah pwd pada terminal atau dengan melihat simbol ~ yang terletak di sebelah kiri $.\nBuat folder kerja dengan nama WRF-Model untuk menampung data-data, package, serta source code WRF. Perintah pada terminal Bash adalah sebagai berikut.\nmkdir WRF-Model\nKemudian, bukalah folder WRF-Model dengan perintah\ncd WRF-Model\nSekarang, Anda berada di folder WRF-Model (Perhatikan ~ berubah menjadi ~/WRF-Model)\nDi dalam WRF-Model, buatlah folder data guna untuk meletakkan data masukan WRF (data statik dan data cuaca).\n\nLangkah-langkah di atas masih berlanjut pada subbab selanjutnya.\n\n\n1.3.3 Data dan Package Pendukung\n\nPerangkat Lunak\nUntuk memasang WRF, Anda perlu menyiapkan perangkat lunak pendukung serta data contoh untuk mensimulasikan WRF. Perangkat lunak tersebut dapat diunduh melalui halaman Github ini. Untuk mengunduh source code, pilih <> Code \\(\\rightarrow\\) Download ZIP (Gambar 1.8). Anda dapat mengunduh secara manual atau menggunakan perintah git clone pada terminal.\nsudo apt -y install git #Install program git jika belum ada\ngit clone https://www.github.com/agungbaruna/pyWRF-install\n\n\n\nGambar 1.8: Unduh source code\n\n\nSetelah software pendukung telah diunduh, unduh source code WPS (WRF Pre-Processing) dan WRF pada halaman Github NCAR. Source code WRF berisi algoritma perhitungan fisik dan dinamik atmosfer, sedangkan source code WPS berisi algoritma untuk persiapan data masukan atmosfer dari GCM dan pemilihan lokasi.\n\nWRF Pre-Processing (WPS): https://www.github.com/wrf-model/WPS\nModel WRF: www.github.com/wrf-model/WRF\n\n\n\nData\nData-data masukan untuk WRF telah tersedia dan unduh pada halaman web https://s.id/wrf-data. Kami menyarankan untuk menggunakan Wi-Fi karena ukuran data cukup besar. Data yang telah diunduh Anda pindahkan ke folder data yang berada di dalam WRF-Model.\n\n\n1. Global Forecast System (GFS)\nUntuk data masukan yang digunakan berasal dari NOAA yang bernama Global Forecasts System (GFS). GFS memiliki resolusi spasial \\(0.25^o\\) (~ 25 km), \\(0.50^o\\) (~50 km), dan \\(1.00^o\\) (~ 100 km) dengan temporal per 6 jam. GFS memiliki produk data prakiraan maupun analisis/histori cuaca secara global. Anda dapat mengunduh data ini pada salah satu halaman web berikut.\n\nAWS S3 Bucket: https://noaa-gfs-bdp-pds.s3.amazonaws.com\nResarch Data Archive (RDA) NCAR: https://rda.ucar.edu/datasets/ds084.1\nNCEP Central Operations: https://nomads.ncep.noaa.gov/\n\nData GFS yang digunakan dalam praktikum ini memiliki waktu 1-3 Januari 2022 pada pukul 00:00, 06:00, 12:00, dan 18:00 UTC dengan resolusi spasial \\(1.00^o\\) yang telah diunduh pada halaman web AWS S3 Bucket. Produk GFS yang digunakan adalah analisis/histori.\n\n\n2. ERA5\nSelain GFS, Anda dapat menggunakan data masukan dari institusi lain, seperti ECMWF pada produk ERA5. ERA5 merupakan data reanalisis sehingga hanya memiliki produk histori. Anda dapat mengunduhnya melalui Climate Data Store (CDS) pada halaman https://cds.climate.copernicus.eu. ERA5 memiliki resolusi spasial sebesar \\(0.25^o\\) dengan temporal per 1 jam. Data ERA5 memiliki dua tipe, yaitu data permukaan tanah (Single Levels) dan atmosfer untuk setiap ketinggian (Pressure Levels). Anda diharuskan mengunduh dua tipe data ini dengan variabel yang dipilih adalah sebagai berikut.\n\nERA5 hourly data on Pressure Levels:\n\ngeopotential\nrelative humidity\nspecific humidity\ntemperature\nu-component wind\nv-component wind\n\nERA5 hourly data on Single Levels:\n\n10m u-component of wind\n10m v-component of wind\n2m dewpoint temperature\n2m temperature\nland sea mask\nmean sea level pressure\nsea ice cover\nsea surface temperature\nskin temperature\nsnow depth\nsoil temperature level 1\nsoil temperature level 2\nsoil temperature level 3\nsoil temperature level 4\nsurface_pressure\nvolumetric soil water layer 1\nvolumetric soil water layer 2\nvolumetric soil water layer 3\nvolumetric soil water layer 4\n\n\nAnda tidak diharuskan mengunduh semua jam karena CDS membatasi banyaknya permintaan data dari pengguna sehingga Anda tidak dapat mengunduh semua data sekaligus. Data ERA5 yang akan digunakan pada praktikum ini memiliki waktu yang sama dengan GFS.\n\n\n3. Data Statik WPS\nData statik ini wajib diunduh untuk menjalankan WRF. Data ini berisi seperti tipe permukaan lahan, nilai Leaf Area Index (LAI), tipe tanah, dan elevasi permukaan. Anda dapat mengunduhnya di https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_high_res_mandatory.tar.gz. File dari data tersebut berukuran 2 GB dan setelah diekstrak dapat mencapai 30 GB. Data ini sudah tersedia di dalam link https://s.id/wrf-data. Untuk mengekstrak file ini, gunakan perintah berikut\ncd data\ngunzip geog_high_res_mandatory.tar.gz\ntar -xf geog_high_res_mandatory.tar\ncd .. # Kembali ke folder WRF-Model\nSetelah itu, folder WPS_GEOG akan muncul di dalam folder data/\n\n\n\n1.3.4 Instalasi Software Compiler\nInstalasi ini meliputi cara melakukan kompilasi dengan dua Compiler berbeda, yaitu GNU dan Intel. Anda dipersilahkan memilih salah satu langkah. Proses kompilasi untuk semua package yang telah terunduh tidak dapat dilakukan pada Compiler yang berbeda.\n\n1. GNU\nSebelum Anda memasuki tahapan instalasi package yang terdapat dalam folder pyWRF-install, pasang terlebih dahulu package dependencies dengan perintah di bawah ini.\nsudo apt -y update && sudo apt -y upgrade\nsudo apt -y install gfortran gcc make m4 csh\n\n\n2. Intel\nBerbeda dengan GNU, tipe Compiler Intel memang agak rumit untuk memasangnya. Namun, Compiler ini sebenarnya lebih efisien dalam hal kecepatan saat mensimulasikan WRF. Kami sudah membandingkan waktu simulasi dengan Compiler tipe ini lebih cepat dibandingkan dengan GNU Gambar 1.3.\nAnda dapat memperoleh software ini di halaman resmi Intel. Kami sudah menyediakan software tersebut di dalam halaman web s.id/wrf-intel-compiler. Terdapat tiga file instalasi Compiler, yaitu Fortran, C, dan MPI (untuk komputasi paralel). Jumlah ukuran tiga file tersebut cukup besar, sekitar 2,5 GB. Letakkan ketiga file ini di dalam folder WRF-Model. Perhatikan langkah-langkah berikut ini untuk memasang ketiga file tersebut.\n# 0. Package pendukung\nsudo apt -y install make m4 csh\n# 1. C Compiler\nbash l_dpcpp-cpp-compiler_p_2023.0.0.25393_offline.sh -a -s --eula accept\n# 2. Fortran Compiler\nbash l_fortran-compiler_p_2023.0.0.25394_offline.sh -a -s --eula accept\n# 3. MPI\nbash l_mpi_oneapi_p_2021.8.0.25329_offline.sh -a -s --eula accept\nLokasi folder hasil instalasi terdapat di ~/intel. Secara default, perintah untuk memanggil program Compiler belum diatur. Untungnya, Intel menyediakan skrip untuk memanggil semua program Compiler secara default, yaitu terdapat di dalam ~/intel/oneapi/setvars.sh. Perintah untuk memanggil skrip setvars.sh adalah sebagai berikut.\nsource ~/intel/oneapi/setvars.sh\n\n\n\n1.3.5 Instalasi Package\nInstalasi beberapa package meliputi zlib, libpng, jasper, hdf5, netcdf-c, dan netcdf-fortran. Perlu diperhatikan dan lihat pada terminal bahwa Anda berada di folder ~/WRF-Model. Masukkan beberapa perintah ENVIRONMENT VARIABEL di bawah ini. Langkah ini wajib dilakukan pada saat melakukan instalasi package dan juga WRF. Pendefinisian ENVIRONMENT VARIABLE ini berlaku untuk GNU maupun Intel.\nexport ODIR=$HOME/WRF-Model\nexport PATH=$ODIR/bin:$PATH\nexport LD_LIBRARY_PATH=$ODIR/lib:$LD_LIBRARY_PATH\nexport LDFLAGS=-L$ODIR/lib\nexport CPPFLAGS=-I$ODIR/include\nexport NETCDF=$ODIR\nexport HDF5=$ODIR\nexport JASPERLIB=$ODIR/lib\nexport JASPERINC=$ODIR/include\n\n1. GNU\nBerikut ini langkah-langkah memasang package pada Compiler GNU. Buka terlebih dahulu folder pyWRF-install/libraries dengan mengetik perintah cd pyWRF-install/libraries.\n\nzlib\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf zlib-1.2.13.tar.gz\n# 2. Buka folder hasil ekstrak\ncd zlib-1.2.13\n# 3. Konfigurasi \nCC=gcc ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\nlibpng\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf libpng-1.6.37.tar.gz\n# 2. Buka folder hasil ekstrak\ncd libpng-1.6.37\n# 3. Konfigurasi \nCC=gcc ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\njasper\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf jasper-1.900.1.tar.gz  \n# 2. Buka folder hasil ekstrak\ncd jasper-1.900.1\n# 3. Konfigurasi \nCC=gcc ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\nopenMPI\nJika Anda tidak berencana menjalankan WRF dengan 1 prosesor, Anda dapat melewati langkah ini. Akan tetapi, kami menyarankan untuk memasang program ini untuk mempersingkat waktu dalam mensimulasikan WRF.\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf openmpi-4.1.4.tar.gz  \n# 2. Buka folder hasil ekstrak\ncd openmpi-4.1.4\n# 3. Konfigurasi \nCC=gcc FC=gfortran ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\nhdf5\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf hdf5-1.12.0.tar.gz \n# 2. Buka folder hasil ekstrak\ncd hdf5-1.12.0\n# 3. Konfigurasi \nCC=gcc FC=gfortran ./configure --prefix=$ODIR --with-default-api-version=v18 --enable-fortran\n# 4. Instalasi\nmake\nmake install\nnetcdf-c\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf netcdf-c-4.7.4.tar.gz \n# 2. Buka folder hasil ekstrak\ncd netcdf-c-4.7.4\n# 3. Konfigurasi \nCC=gcc ./configure --prefix=$ODIR --disable-dap\n# 4. Instalasi\nmake\nmake install\nnetcdf-fortran\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf netcdf-fortran-4.5.3.tar.gz \n# 2. Buka folder hasil ekstrak\ncd netcdf-fortran-4.5.3\n# 3. Konfigurasi \nCC=gcc FC=gfortran ./configure --prefix=$ODIR\n# 4. Instalasi\nmake\nmake install\n\n\n\n2. Intel\nBerikut ini langkah-langkah memasang package pada Compiler Intel. Buka terlebih dahulu folder pyWRF-install/libraries dengan mengetik perintah cd pyWRF-install/libraries. Untuk proses instalasi menggunakan Intel, sama saja dengan GNU. Hanya saja, perbedaannya adalah definisi dari variabel CC maupun FC. Untuk Intel, variabel CC=icc dan FC=ifort. Jangan lupa untuk mengaktifkan ENVIRONMENT VARIABLE dari Intel dengan mengetik perintah.\nsource ~/intel/oneapi/setvars.sh\n\nzlib\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf zlib-1.2.13.tar.gz\n# 2. Buka folder hasil ekstrak\ncd zlib-1.2.13\n# 3. Konfigurasi \nCC=icc CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\nlibpng\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf libpng-1.6.37.tar.gz\n# 2. Buka folder hasil ekstrak\ncd libpng-1.6.37\n# 3. Konfigurasi \nCC=icc CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\njasper\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf jasper-1.900.1.tar.gz  \n# 2. Buka folder hasil ekstrak\ncd jasper-1.900.1\n# 3. Konfigurasi \nCC=icc CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR\n# 4. Instalasi\nmake check install\nhdf5\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf hdf5-1.12.0.tar.gz \n# 2. Buka folder hasil ekstrak\ncd hdf5-1.12.0\n# 3. Konfigurasi \nCC=icc FC=ifort CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR --with-default-api-version=v18 --enable-fortran\n# 4. Instalasi\nmake\nmake install\nnetcdf-c\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf netcdf-c-4.7.4.tar.gz \n# 2. Buka folder hasil ekstrak\ncd netcdf-c-4.7.4\n# 3. Konfigurasi \nCC=icc CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR --disable-dap\n# 4. Instalasi\nmake\nmake install\nnetcdf-fortran\n# 0. Buka folder libraries\ncd $ODIR/pyWRF-install/libraries\n# 1. Extract \ntar -xf netcdf-fortran-4.5.3.tar.gz \n# 2. Buka folder hasil ekstrak\ncd netcdf-fortran-4.5.3\n# 3. Konfigurasi \nCC=icc FC=ifort CFLAGS='-diag-disable=10441' ./configure --prefix=$ODIR\n# 4. Instalasi\nmake\nmake install\n\n\n\n\n1.3.6 Instalasi WRF\nProses instalasi WRF membutuhkan waktu agak lama, yaitu sekitar 30-60 menit. Tentunya, ini bergantung pada spesifikasi prosesor yang Anda gunakan, serta tipe Compiler. Ikuti langkah-langkah berikut.\n\nBuka direktori WRF yang berada di dalam $ODIR/WRF dengan perintah.\ncd $ODIR/WRF\nJalankan file configure dengan perintah.\n./configure\nAnda akan disajikan beberapa teks di dalamnya. Anda disuruh untuk memilih opsi Compiler. Tipe Compiler tersebut selain GNU dan Intel, ada pula IBM, PGI, Fujitsu, Pathscale, dan CRAY. Jika Anda menggunakan Compiler tipe GNU, ketikkan angka 35. Untuk Intel, ketik angka 16. Setelah itu, tekan Enter.  \nUntuk melakukan instalasi, ketik perintah ini.\n./compile em_real -j jumlah_prosesor\ndimana jumlah_prosesor adalah jumlah dari prosesor pada laptop/komputer Anda yang akan digunakan untuk proses instalasi dan kompilasi kode-kode WRF. Proses kompilasi akan memakan waktu yang sangat lama apabila Anda hanya menggunakan 1 prosesor. Pastikan berbagai program pada komputer/laptop Anda yang saat ini sedang dibuka, seperti Google Chrome atau Spotify harap ditutup terlebih dahulu karena ini membantu proses instalasi lebih stabil.\n\nUntuk Compiler Intel, setelah langkah ke-2 dijalankan, buka file configure.wrf dengan perintah.\nnano configure.wrf\nKemudian, scroll ke bawah dengan menekan tombol \\(\\downarrow\\) pada keyboard dan ubahlah isinya sesuai aturan pada tabel di bawah ini.\n\n\nTabel 1.1: Pengubahan variabel DM_FC dan DM_CC\n\n\nSebelum\nSesudah\n\n\n\n\nDM_FC = mpif90 -f90=$(SFC)\nDM_FC = mpiifort -f90=$(SFC)\n\n\nDM_CC = mpicc -cc=$(SCC)\nDM_CC = mpiicc -cc=$(SCC)\n\n\n\n\nSetelah selesai diubah, keluar dari editor nano dengan menekan tombol Ctrl + X\n\nProses instalasi WRF berhasil dilakukan apabila terdapat file yang berekstensi .exe: ndown.exe, tc.exe, real.exe, dan wrf.exe di dalam folder main. Anda bisa melihatnya dengan perintah\nls main/*.exe\nmain/ndown.exe  main/real.exe  main/tc.exe  main/wrf.exe\n\n\n1.3.7 Instalasi WRF Pre-Processing (WPS)\nProgram WPS digunakan untuk menyesuaikan data masukan dari berbagai sumber (ECMWF, GFS, NAM, …) sebelum ke simulasi WRF. Terdapat 3 program utama: geogrid.exe, ungrib.exe, dan metgrid.exe. Berikut ini kegunaan dari ketiga program utama WPS.\n\ngeogrid.exe: memilih lokasi yang akan dilakukan simulasi. Luaran program ini berupa file geo_em* yang berisi nilai-nilai dari variabel di dalam file hasil ekstrak geog_high_res_mandatory.tar\nungrib.exe: mengubah file berformat grib menjadi nc, serta memungkinkan dapat melakukan interpolasi (waktu dan lokasi)\nmetgrid.exe: menggabungkan\n\nProses instalasi WPS tidak membutuhkan waktu yang lama, sekitar 2-5 menit. Untuk melakukan instalasi WPS, ikuti langkah-langkah berikut ini.\n\nSaat ini, Anda berada di folder WRF. Buka folder WPS dengan perintah\ncd $ODIR/WPS\nJalankan file configure dengan perintah\n./configure\nKetik angka 3 untuk GNU atau angka 19 untuk Intel.\nSetelah selesai, di folder WPS akan muncul file configure.wps. Beberapa baris dari isi file tersebut ada yang perlu ditambahkan dan diganti dengan ketentuan ini.\n\nUntuk Intel, tambahkan -liomp5 setelah -lnetcdf pada bagian variabel WRF_LIB = .... Kemudian, ubah pula DM_FC dan DM_CC seperti pada Tabel 1.1.\nUntuk GNU, tambahkan -fopenmp setelah -lnetcdf pada bagian variabel WRF_LIB = ....\n\nSetelah diganti, lakukan kompilasi dengan mengetik perintah\n./compile\n\nProses instalasi berhasil apabila terdapat 3 file .exe: geogrid.exe, ungrib.exe, dan metgrid.exe di folder WPS yang berupa shortcut. Anda dapat menggunakan perintah\nls *.exe\ngeogrid.exe  metgrid.exe  ungrib.exe"
  },
  {
    "objectID": "praktikum-1.html#prosedur-praktikum-menjalankan-simulasi-wrf-arw",
    "href": "praktikum-1.html#prosedur-praktikum-menjalankan-simulasi-wrf-arw",
    "title": "1  Dynamical Downscaling: Model Weather Research Forecasting (WRF)",
    "section": "1.4 Prosedur Praktikum: Menjalankan Simulasi WRF-ARW",
    "text": "1.4 Prosedur Praktikum: Menjalankan Simulasi WRF-ARW\nAnda dapat melanjutkan ke tahapan ini apabila seluruh program telah berhasil terpasang. Bagi Anda yang belum berhasil, sabar :D dan ulangi kembali langkah-langkah di atas. Secara umum, diagram pada Gambar 1.9 menunjukkan proses menjalankan WRF dari tahapan memasukkan data hingga plot dan analisis akhir. Seperti yang telah dijelaskan pada subbab sebelumnya bahwa langkah awal dalam menjalankan WRF adalah menjalankan WPS terlebih dahulu. Anda perlu menyiapkan data masukan atmosfer maupun permukaan (data statik). Program geogrid.exe dijalankan pertama, kemudian diikuti dengan ungrib.exe dan terakhir metgrid.exe. Selanjutnya, Anda dapat melangkah ke program WRF, yaitu real.exe dan wrf.exe. Program real.exe digunakan sebagai pendefinisian kondisi awal dan kondisi batas berdasarkan informasi dari namelist.input yang berada dalam folder test/em_real/. Kemudian, Anda dapat menggunakan perangkat lunak apapun (mis. NCAR Comman Language (NCL), GrADS, R, Python, Matlab, ArcMAP, QGIS, …) untuk menganalisis serta visualisasi luaran WRF.\nUntuk data masukan, Anda juga dapat menggunakan data observasi, tetapi harus berupa grid. Namun, ini merupakan program yang berbeda dari WRF-ARW, yaitu WRFDA (WRF Data Assimilation). Selain itu, terdapat pula data masukan dari emisi kimia, seperti emisi biogenik dan atropogenik. Ini juga merupakan program yang berbeda dari WRF-ARW, yaitu WRF-Chem. Penjelasan mengenai WRFDA dan WRF-Chem tidak disampaikan di dalam praktikum ini.\n\n\n\nGambar 1.9: Diagram WRF\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n\n\n\n1.4.1 Program WPS\nUntuk lebih mudah dalam memahami alur proses simulasi WRF pada modul ini, lokasi/domain yang dipilih untuk adalah Kota Surabaya dengan periode 1 - 3 Januari 2022 dengan data GFS dan ERA5. Interval waktu dari kedua data tersebut adalah 6 jam, yaitu pukul 00:00, 06:00, 12:00, dan 18:00 waktu Zulu (GMT+0). Langkah awal sebelum menjalankan WRF adalah menentukan lokasi dan waktu terlebih dahulu di dalam program WPS. Seperti yang telah dijelaskan sebelumnya, WPS memiliki 3 program utama, yaitu geogrid.exe, ungrib.exe, dan metgrid.exe.\nSesuai dengan kelanjutan dari subbab sebelumnya mengenai instalasi WRF, Anda saat ini berada di dalam folder WPS/. Jika lupa, Anda bisa mengetikkan perintah ini.\ncd $HOME/WRF-Model/WPS\nKemudian, Jika Anda menutup terminal bash atau mematikan laptop/komputer, definisikan kembali ENVIRONMENT VARIABLE seperti pada saat proses memasang WRF dan WPS, hanya LD_LIBRARY_PATH dan PATH.\nexport ODIR=$HOME/WRF-Model\nexport PATH=$ODIR/bin:$PATH\nexport LD_LIBRARY_PATH=$ODIR/lib:$LD_LIBRARY_PATH\nLangkah-langkah menjalankan program WPS adalah sebagai berikut.\n\n1.4.1.1 Penentuan Lokasi dan Waktu Simulasi\nIsi dari file tersebut pada saat awal kurang lebih seperti ini.\n&share\n wrf_core = 'ARW',\n max_dom = 2,\n start_date = '2019-09-04_12:00:00','2019-09-04_12:00:00',\n end_date   = '2019-09-06_00:00:00','2019-09-04_12:00:00',\n interval_seconds = 10800\n/\n\n&geogrid\n parent_id         =   1,    1,\n parent_grid_ratio =   1,    3,\n i_parent_start    =   1,   53,\n j_parent_start    =   1,   25,\n e_we              =  150, 220,\n e_sn              =  130, 214,\n geog_data_res = 'default','default',\n dx = 15000,\n dy = 15000,\n map_proj = 'lambert',\n ref_lat   =  33.00,\n ref_lon   = -79.00,\n truelat1  =  30.0,\n truelat2  =  60.0,\n stand_lon = -79.0,\n geog_data_path = '/glade/work/wrfhelp/WPS_GEOG/'\n/\n\n&ungrib\n out_format = 'WPS',\n prefix = 'FILE',\n/\n\n&metgrid\n fg_name = 'FILE'\n/\nTerdapat berbagai macam parameter di dalam &share, &geogrid, &ungrib, dan &metgrid. Anda perlu mengubah beberapa parameter tersebut yang dapat disesuaikan dengan simulasi. Tapi, Anda harus memperhatikan aturan atau template yang telah diberikan di dalam panduan pengguna. Untuk lebih rincinya, Anda bisa lihat di Panduan Pengguna WRF-ARW Bab 3. Di dalam tahapan ini, Anda perlu mengubah parameter-parameter yang ada di dalam &geogrid. Anda dapat mengubah file ini dengan membukanya menggunakan software apa saja (mis. Notepad, VS Code, Notepad++) atau dapat langsung dengan terminal dengan mengetik nano namelist.wps. Pada contoh yang telah kami berikan, Anda perlu mengganti parameter pada seksi &share dan &geogrid. Penjelasan setiap variabel dapat dilihat pada Tabel 1.2. File yang telah berubah menjadi seperti di bawan ini.\n&share\n wrf_core = 'ARW',                                                                 \n max_dom = 3,                                                                      \n start_date = '2022-01-01_00:00:00','2022-01-01_00:00:00','2022-01-01_00:00:00',   \n end_date   = '2022-01-03_18:00:00','2022-01-03_18:00:00','2022-01-03_18:00:00',   \n interval_seconds = 21600,                                                         \n io_form_geogrid = 2,                                                              \n/\n\n&geogrid\n parent_id         =   1,   1,   1,\n parent_grid_ratio =   1,   3,   9,                                                  \n i_parent_start    =   1,  11,  15,\n j_parent_start    =   1,  11,  15,\n e_we              =  33,  40,  46,                                                 \n e_sn              =  33,  40,  46,                                                 \n geog_data_res = 'default','default','default',                                     \n dx = 18000,                                                                        \n dy = 18000,                                                                        \n map_proj = 'mercator',                                                             \n ref_lat   =  -7.328457529144323,                                                   \n ref_lon   = 112.7412453984603,                                                     \n truelat1  =  -7.328457529144323,                                                   \n geog_data_path = '/home/absen/WRF-Model/data/WPS_GEOG/'                                 \n/\n\n&ungrib\n out_format = 'WPS',\n prefix = 'FILE',\n/\n\n&metgrid\n fg_name = 'FILE'\n io_form_metgrid = 2, \n/\n\n\nTabel 1.2: Informasi beberapa variabel di dalam namelist.wps\n\n\n\n\n\n\nVariabel\nKeterangan\n\n\n\n\nwrf_core\nTipe penyelesaian WRF, ARW atau NMM\n\n\nmax_dom\nJumlah domain, semakin banyak domain maka semakin tinggi resolusi spasialnya\n\n\nstart_date\nWaktu mulai simulasi sesuai dengan data masukan. Sesuai dengan jumlah domain. Format: YYYY-MM-DD_HH:mm:ss\n\n\nend_date\nWaktu akhir simulasi sesuai dengan data masukan. Sesuai dengan jumlah domain. Format: YYYY-MM-DD_HH:mm:ss\n\n\ninterval_seconds\nInterval waktu dari data masukan (dalam detik)\n\n\nio_from_geogrid\nTipe format file luaran geogrid.exe (1 = binary, 2 = netcdf, 3 = GRIB1)\n\n\nparent_id\nUntuk domain paling kasar, nilainya 1. Domain selanjutnya juga bernilai 1 yang menandakan bahwa subdomain merupakan bagian dari domain utamanya.\n\n\nparent_grid_ratio\nRasio piksel dari dx dan dy pada domain ke-1. Domain paling kasar adalah 1 dan selanjutnya mengikuti rasio yang diinginkan.\n\n\ni_parent_start\nNomor indeks acuan untuk koordinat X. Domain paling kasar bernilai 1, ditentukan dari kiri-bawah\n\n\nj_parent_start\nNomor indeks acuan untuk koordinat Y. Domain paling kasar bernilai 1, ditentukan dari kiri-bawah\n\n\ne_we\nJumlah grid/piksel dari barat ke timur mengikuti rumus parent_grid_ratio * N + 1, dengan N > 0\n\n\ne_sn\nJumlah grid/piksel dari selatan ke utara mengikuti rumus parent_grid_ratio * N + 1, dengan N > 0\n\n\ngeog_data_res\nPemilihan resolusi spasial dari data statik\n\n\ndx\nResolusi spasial pada koordinat X (dalam meter)\n\n\ndy\nResolusi spasial pada koordinat Y (dalam meter)\n\n\nmap_proj\nSistem proyeksi peta (mercator, lambert, polar, lat-lon). Untuk simulasi di sekitar khatulistiwa, direkomendasikan menggunakan mercator\n\n\nref_lat\nKoordinat lintang titik tengah acuan dari domain paling kasar\n\n\nref_lon\nKoordinat bujur titik tengah acuan dari domain paling kasar\n\n\ntruelat1\nKoordinat lintang sebenarnya. Dibutuhkan untuk sistem proyeksi mercator, polar, dan lambert\n\n\ngeog_data_path\nLokasi folder WPS_GEOG\n\n\n\n\nPada bagian &geogrid, penentuan lokasi kajian ini cukup rumit. Anda bisa menggunakan halaman github https://jiririchter.github.io/WRFDomainWizard untuk membuat file namelist.wps sesuai dengan lokasi yang Anda inginkan, setidaknya Anda dapat menyalin teks pada bagian &geogrid Gambar 1.10.\n\n\n\nGambar 1.10: WRF Domain Wizard oleh Jiririchter\n\n\n\n\n1.4.1.2 Menjalankan Program geogrid.exe\nSelanjutnya, Anda dapat menjalankan program geogrid.exe dengan perintah di bawah ini. Hasilnya, terdapat 3 file dengan nama geo_em.d0x.nc (x = nomor domain; 1, 2, 3) karena pengaturan max_dom = 3.\n./geogrid.exe\nls geo_em*\ngeo_em.d01.nc  geo_em.d02.nc  geo_em.d03.nc\n\n\n1.4.1.3 Menyambungkan File Data Masukan dan Tabel Variabel\nWPS menyediakan program link_grib.csh untuk menyambungkan file data masukan ke dalam folder WPS/ dengan membuat shortcut yang bernama GRIBFILE.* (GRIBFILE.AAA, GRIBFILE.AAB, …). Perintahnya sebagai berikut.\n./link_grib.csh $ODIR/data/GFS/*\nKemudian, buatlah shortcut dengan nama Vtable di dalam folder WPS/ dari file yang berada di dalam folder ungrib/Variable_Tables. Untuk data GFS, nama file tersebut adalah Vtable.GFS, sedangkan ERA5 adalah Vtable.ERA-Interim.pl. Perintahnya sebagai berikut.\nln -sf ungrib/Variable_Tables/Vtable.GFS Vtable # GFS\nln -sf ungrib/Variable_Tables/Vtable.ERA-Interim.pl Vtable # ERA5\n\n\n1.4.1.4 Menjalankan Program ungrib.exe\nSetelah menyambungkan data masukan serta tabel variabel, jalankan program ungrib.exe dengan perintah berikut.\n./ungrib.exe\nLuaran dari program ini adalah file dengan nama FILE:* yang memiliki format .nc (netcdf).\n\n\n1.4.1.5 Menjalankan Program metgrid.exe\nJalankan program metgrid.exe dengan perintah berikut.\n./metgrid.exe\nLuaran dari program ini adalah file dengan nama met_em* yang memiliki format .nc. File-file ini nanti yang akan dipindahkan menuju folder WRF/test/em_real atau Anda dapat juga membuat shortcut. Perintahnya sebagai berikut.\nmv met_em* $ODIR/WRF/test/em_real\n# atau\nln -sf met_em* $ODIR/WRF/test/em_real\n\n\n\n1.4.2 Program WRF\n\n\n\n\nGlotter M, Elliott J, McInerney D, Best N, Foster I, Moyer EJ. 2014. Evaluating the utility of dynamical downscaling in agricultural impacts projections. Proceedings of the National Academy of Sciences. 111(24):8776–8781.\n\n\nGoly A, Teegavarapu RS, Mondal A. 2014. Development and evaluation of statistical downscaling models for monthly precipitation. Earth Interactions. 18(18):1–28.\n\n\nHuth R, Kyselỳ J. 2000. Constructing site-specific climate change scenarios on a monthly scale using statistical downscaling. Theoretical and Applied Climatology. 66(1):13–27.\n\n\nKim J, Chang J, Baker N, Wilks D, Gates W. 1984. The statistical problem of climate inversion: Determination of the relationship between local and large-scale climate. Monthly weather review. 112(10):2069–2077.\n\n\nPahlavan H, Zahraie B, Nasseri M, Mahdipour Varnousfaderani A. 2018. Improvement of multiple linear regression method for statistical downscaling of monthly precipitation. International journal of environmental science and technology. 15(9):1897–1912.\n\n\nPiani C, Haerter J, Coppola E. 2010. Statistical bias correction for daily precipitation in regional climate models over europe. Theoretical and Applied Climatology. 99(1-2):187–192.\n\n\nPiani C, Weedon G, Best M, Gomes S, Viterbo P, Hagemann S, Haerter J. 2010. Statistical bias correction of global simulated daily precipitation and temperature for the application of hydrological models. Journal of Hydrology. 395(3-4):199–215.\n\n\nPowers JG, Klemp JB, Skamarock WC, Davis CA, Dudhia J, Gill DO, Coen JL, Gochis DJ, Ahmadov R, Peckham SE, et al. 2017. The weather research and forecasting model: Overview, system efforts, and future directions. Bulletin of the American Meteorological Society. 98(8):1717–1737.doi:10.1175/BAMS-D-15-00308.1.\n\n\nRichardson CW. 1981. Stochastic simulation of daily precipitation, temperature, and solar radiation. Water resources research. 17(1):182–190.\n\n\nSachindra D, Huang F, Barton A, Perera B. 2014. Statistical downscaling of general circulation model outputs to precipitation—part 1: Calibration and validation. International Journal of Climatology. 34(11):3264–3281.\n\n\nSkamarock WC, Klemp JB, Dudhia J, Gill DO, Barker DM, Wang W, Powers JG. 2019. A description of the advanced research WRF version 4. National Center For Atmospheric Research Boulder Co Mesoscale; Microscale ….\n\n\nSmid M, Costa AC. 2018. Climate projections and downscaling techniques: A discussion for impact studies in urban systems. International Journal of Urban Sciences. 22(3):277–307.doi:10.1080/12265934.2017.1409132.\n\n\nSonkaew T, Cumwan S, Kanta W, Macatangay R. Finding the optimum microphysics and convective parameterization schemes for the WRF model for LPRU, thailand.\n\n\nWilby RL, Wigley TM. 1997. Downscaling general circulation model output: A review of methods and limitations. Progress in physical geography. 21(4):530–548."
  }
]